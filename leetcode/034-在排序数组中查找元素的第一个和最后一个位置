题目描述

给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。

你的算法时间复杂度必须是 O(log n) 级别。

如果数组中不存在目标值，返回 [-1, -1]。

示例 1:

输入: nums = [5,7,7,8,8,10], target = 8
输出: [3,4]




public class Solution {

    public static int[] searchRange(int[] nums, int target) {
        int[] res = new int[]{-1,-1};
        if(nums == null || nums.length==0)return res;
        if(nums.length == 1 && nums[0] == target){
            return new int[]{0,0};
        }
        int low = 0,high = nums.length - 1;
        while (low <= high){
            int mid = (low + high)>>1;
            if(nums[mid] < target){
                low = mid + 1;
            }else if(nums[mid] > target){
                high = mid - 1;
            }else{
                int left=mid,right = mid;
                while(right + 1<nums.length&&nums[right + 1] == target){
                    right++;
                }
                while(left - 1>=0&&nums[left - 1] == target){
                    left--;
                }
                res[0] = left;res[1] = right;
                return res;
            }
        }
        return res;
    }
}


