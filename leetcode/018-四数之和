

给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，使得 a + b + c + d 的值与 target 相等？找出所有满足条件且不重复的四元组。

注意：

答案中不可以包含重复的四元组。

示例：

给定数组 nums = [1, 0, -1, 0, -2, 2]，和 target = 0。

满足要求的四元组集合为：
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]






public class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        int n = nums.length;
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        //枚举a
        for(int first = 0;first < n -3;first++){
            //需要和上一次枚举的数不相同
            if(first > 0&&nums[first] == nums[first - 1]){
                continue;
            }
            //枚举b
            for(int second = first + 1;second < n - 2; second++){
                //需要和上一次不同
                if(second >first+ 1 &&nums[second] == nums[second -1]){
                    continue;
                }
                for(int third = second + 1;third < n -1;third++){
                    if(third >second+ 1 &&nums[third] == nums[third -1]){
                        continue;
                    }
                    int four = n - 1;
                    //需要保证b的指针在c的左侧
                    while(third < four && nums[first] + nums[second] + nums[four] + nums[third] > target){
                        four--;
                    }
                    if(four == third){
                        break;
                    }
                    if(nums[first] + nums[second] + nums[four] + nums[third] == target){
                        List<Integer> list = new ArrayList<Integer>();
                        list.add(nums[first]);
                        list.add(nums[second]);
                        list.add(nums[third]);
                        list.add(nums[four]);
                        ans.add(list);
                    }

                }

            }
        }
        return ans;
    }
}


