题目描述


给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

 

示例：

给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]





public class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        int n = nums.length;
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        //枚举a
        for(int first = 0;first < n;first++){
            //需要和上一次枚举的数不相同
            if(first > 0&&nums[first] == nums[first - 1]){
                continue;
            }
            int third = n - 1;
            int target  = -nums[first];
            //枚举b
            for(int second = first + 1;second < n; second++){
                //需要和上一次不同
                if(second > first + 1&& nums[second] == nums[second -1]){
                    continue;
                }
                //需要保证b的指针在c的左侧
                while(second < third && nums[second] + nums[third] > target){
                    --third;
                }
                //如果指针重复，随着b后续增加
                //就会有a+b+c=0且b<c的c了，退出循环
                if(second == third){
                    break;
                }
                if(nums[second] + nums[third] == target){
                    List<Integer> list = new ArrayList<Integer>();
                    list.add(nums[first]);
                    list.add(nums[second]);
                    list.add(nums[third]);
                    ans.add(list);
                }
            }
        }
        return ans;
    }
}


