题目描述

给定一个无重复元素的数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。

candidates 中的数字可以无限制重复被选取。

说明：

所有数字（包括 target）都是正整数。
解集不能包含重复的组合。 
示例 1：

输入：candidates = [2,3,6,7], target = 7,
所求解集为：
[
  [7],
  [2,2,3]
]


public class Solution {

    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>>ans = new ArrayList<List<Integer>>();
        List<Integer> combine = new ArrayList<Integer>();
        dfs(candidates,target,ans,combine,0);
        return ans;
    }

    public void dfs(int[] candidates,int target,List<List<Integer>> ans,List<Integer> combine,int idx){
        if(idx == candidates.length){
            return;
        }
        if(target == 0){
            ans.add(new ArrayList<Integer>(combine));
            return;
        }
        dfs(candidates,target,ans,combine,idx +1);
        if(target - candidates[idx] >=0){
            combine.add(candidates[idx]);
            dfs(candidates,target - candidates[idx],ans,combine,idx);
            combine.remove(combine.size() - 1);
        }
    }
}


