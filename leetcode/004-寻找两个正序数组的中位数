题目描述

给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。

请你找出这两个正序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。

你可以假设 nums1 和 nums2 不会同时为空。








public class Solution {

    public int getKthElement(int[] nums1,int nums2[],int k){
        int length1 = nums1.length,length2 = nums2.length;
        int index1 = 0,index2 = 0;
        int kthElement = 0;

        while(true){
            //边界情况
            if(index1 == length1){
                return  nums2[index2 + k - 1];
            }
            if(index2 == length2){
                return nums1[index1 + k -1];
            }
            if(k == 1){
                return Math.min(nums1[index1],nums2[index2]);
            }
            //正常情况
            int half = k / 2;
            int newIndex1 = Math.min(index1 + half,length1);
            int newIndex2 = Math.min(index2 + half,length2);
            int pivot1 = nums1[newIndex1],pivot2 = nums2[newIndex2];
            if(pivot1 <= pivot2){
                k -=(newIndex1 - index1 + 1);
                index1 = newIndex1 +1;
            }else{
                k -=(newIndex2 - index2 +1);
                index2 = newIndex2 + 1;
            }
        }
    }
}


